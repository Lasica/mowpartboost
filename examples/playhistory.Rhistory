install.packages("swirl")
install.packages("RCurl")
install.packages("bitops")
install.packages("RCurl")
install.packages("swirl")
install.packages("digest")
install.packages("swirl")
install.packages("yaml")
install.packages("swirl")
library("swirl");install_course("R Programming")
swirl()
0
library("swirl");install_course("R Programming")
swirl()
3+9
5+7
play()
dupa <- 5+7
nxt()
x <- 5+7
x
y<-x-3
y
z<-c(1.1, 9, 3.14)
z
?c
z
c(z, 555, z)
z*2+100
my_sqrt <- (z-1)^0.5
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+100
z*2+1000
my_div
getwd()
ls
ls()
x <- 9
ls ()
list.files()
dir()
info()
?list.flies
?list.files
args(list.files)
old.dir <- dir
old.dir <- dir()
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
files.list()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
help(file.path)
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir2", "testdir3"), recursive=TRUE)
setwd=old.dir
setwd(old.dir)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
?along.with
?seq
seq(along.with=my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(1,2,3),10)
rep(c(1,2,3),times=10)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect <- c(0.55, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >6
num_vect >=6
swirl()
library(swirl)
swirl()
skip()
0
exit()
play()
nxt()
info()
skip()
skip()
0
skip()
skip()
skip()
0
skip()
skip()
skip()
my_vector <- 1:20
my_vector
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data, cnames)
my_data.colnames <- colnames(my_data, cnames)
?colnames
my_data.colnames <- colnames(cnames)
dim(my_data)
dim(my_vector)
colnames(my_data) <- cnames
my_data
swirl()
TRUE == TRUE
FALSE==TRUE
(FALSE==TRUE) == FALSE
FALSE==TRUE == FALSE
6 == 7
6<7
6<=7
10<=10
5 != 7
skip()
skip()
skip()
skip()
skip()
skip()
skip()
0
exit()
info()
bye()
swirl()
isTRUE(6>4)
identical('twins', 'twins')
xor(5==6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints  <  0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function("My first function!")
boring_function
submit()
my_mean(c(4,5,10))
submit()
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11, num=5)
remainder(4, div=2)
args(remainder)
submit()
evaluate(std, c(1.4, 3.6, 7.9, 8.8))
evaluate(dev, c(1.4, 3.6, 7.9, 8.8))
mean()
?mean
a
a
3
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x(1)}, c(8,4,0))
evaluate(function(x) {x[1]}, c(8,4,0))
evaluate(function(x) {x[-1]}, c(8,4,0))
play()
evaluate(function(x) {x[-1]}, c(8,4,0))
evaluate(function(x) {x[-2]}, c(8,4,0))
evaluate(function(x) {x[1]}, c(8,4,0))
evaluate(function(x) {x[end]}, c(8,4,0))
evaluate(function(x) {x[length(x)]}, c(8,4,0))
nxt()
?paste
skip()
submit()
submit()
telegram("Hey", "John")
submit()
mad_libs(place="someplace", adjective="rough", noun="balloon")
submit()
'Hello' %p% 'student!'
submit()
'Hello' %p% 'student!'
'Hello' %p% 'student!'
'Hello' %p% 'student!'
submit()
'Hello' %p% 'student!'
'Hello' %p% 'student!'
'Hello' %p% 'student!'
submit()
'I' %p% 'love' %p% 'R!'
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply(list, function)
?sapply
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
c
skip()
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
play()
set.seed(123)
vn <- sample(1:100, 100)
mn <- matrix(vn, nrow=25, ncol=4)
nneighb <- function(m)
{
nn <- rep(NA, nrow(m))
sapply(1:nrow(m),
function(i)
{
di <- function(r) m[i,]%*%r/(sqrt(r%*%r)*sqrt(m[i,]%*%m[i,]))
nn[i] <<- which.max(apply(m[-i,], 1, di))
})
nn
}
nneighb(mn)
mn
?%*%
?*
nneighb(mn)
count.events <- function(n0=0)
{
n <- n0
list(reset=function(n0) n <<- n0, count=function() n, event=function() n <<- n+1)
}
ce <- count.events()
ce$event()
ce$event()
ce$event()
ce$count()
ce$reset(1)
ce$reset(1)
ce$count()
nxt()
swirl()
skip()
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Ac)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace=TRUE)
sample(1:6, 4, replace=TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips <- sample(100, replace=TRUE, prob=c(0.3,0.7))
flips <- sample(c(0,1), 100, replace=TRUE, prob=c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1, size=100, prob=0.7)
flips2 <- vapply(1:100, rbinom(1, size=1, prob=0.7))
rbinom(100, size=1, prob=0.7))
flips2 <- rbinom(100, size=1, prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean=100, sd=25)
?rpois
rpois(5, lambda=10)
my_pois <- replicate(100, rpois(5, lambda=10))
my_pois <- replicate(100, rpois(5, 10))
my_pois
colMeans(my_pois)
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
print(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <<- Sys.time()
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B, %d, %Y %H:%M")
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time() - t1, units='days')
difftime(Sys.time(), t1, units='days')
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed, y=cars$dist)
plot(y=cars$speed, =cars$dist)
plot(y=cars$speed, x=cars$dist)
?plot
plot(y=cars$speed, x=cars$dist, xlab="Speed")
plot(x=cars$speed, y=cars$dist, xlab="Speed")
plot(x=cars$speed, y=cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist,  ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist, main="My Plot")
plot(cars, main="My Plot")
plot(cars, sub="My Plot Subtitle")
?par
plot(cars, col=2)
plot(cars, col="red")
plot(cars, col="green")
plot(cars, xlim=c(10, 15))
?points
plot(cars, pch=2)
load(mtcars)
3
data(mtcars)
?boxplot
boxplot(mpg~cyl)
boxplot(formula= mpg~cyl, data=mtcars)
hist(mtcar$mpg)
hist(mtcars$mpg)
str(mtcars)
setwd("/qarr/projects/studia/mow")
read.csv("datasets/energy/raw/energydata_complete.csv")
?read.csv
energydata <- read.csv("datasets/energy/raw/energydata_complete.csv")
str(energydata)
summary(energydata)
savehistory("/mnt/qarr/belkar/projects/studia/mow/examples/playhistory.Rhistory")
